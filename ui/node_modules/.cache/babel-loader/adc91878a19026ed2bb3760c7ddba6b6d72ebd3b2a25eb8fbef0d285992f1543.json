{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/projects/bug-free-octo-guide/ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: 'Welcome to the PRD Generator! What is the feature you would like to build?',\n    author: 'bot'\n  }]);\n  const [input, setInput] = useState('');\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, {\n        text: input,\n        author: 'user'\n      }];\n      setMessages(newMessages);\n      const messageToSend = input;\n      setInput('');\n      try {\n        const response = await fetch('http://localhost:8000/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: messageToSend\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setMessages([...newMessages, {\n            text: data.response,\n            author: 'bot'\n          }]);\n        } else {\n          console.error('Error sending message');\n          setMessages([...newMessages, {\n            text: 'Error: Could not connect to the server.',\n            author: 'bot'\n          }]);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages([...newMessages, {\n          text: 'Error: Could not connect to the server.',\n          author: 'bot'\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-600 text-white p-4 text-center text-lg font-semibold\",\n      children: \"PRD Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatBoxRef,\n      className: \"flex-1 p-4 overflow-y-auto\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.author === 'bot' ? 'justify-start' : 'justify-end'} mb-2`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-lg px-4 py-2 ${msg.author === 'bot' ? 'bg-gray-300 text-black' : 'bg-blue-600 text-white'}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-white border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 p-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-600\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-600 text-white px-4 rounded-r-lg hover:bg-blue-700\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M+oAyHaJA9n3MCiWj9imVsPp+Ng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","text","author","input","setInput","chatBoxRef","current","scrollTop","scrollHeight","handleSend","trim","newMessages","messageToSend","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/projects/bug-free-octo-guide/ui/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { text: 'Welcome to the PRD Generator! What is the feature you would like to build?', author: 'bot' },\n  ]);\n  const [input, setInput] = useState('');\n  const chatBoxRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, { text: input, author: 'user' }];\n      setMessages(newMessages);\n      const messageToSend = input;\n      setInput('');\n\n      try {\n        const response = await fetch('http://localhost:8000/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ text: messageToSend }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setMessages([...newMessages, { text: data.response, author: 'bot' }]);\n        } else {\n          console.error('Error sending message');\n          setMessages([...newMessages, { text: 'Error: Could not connect to the server.', author: 'bot' }]);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n        setMessages([...newMessages, { text: 'Error: Could not connect to the server.', author: 'bot' }]);\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100\">\n      <div className=\"bg-blue-600 text-white p-4 text-center text-lg font-semibold\">\n        PRD Generator\n      </div>\n      <div ref={chatBoxRef} className=\"flex-1 p-4 overflow-y-auto\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`flex ${msg.author === 'bot' ? 'justify-start' : 'justify-end'} mb-2`}>\n            <div className={`rounded-lg px-4 py-2 ${msg.author === 'bot' ? 'bg-gray-300 text-black' : 'bg-blue-600 text-white'}`}>\n              {msg.text}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"p-4 bg-white border-t border-gray-200\">\n        <div className=\"flex\">\n          <input\n            type=\"text\"\n            className=\"flex-1 p-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-600\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n            placeholder=\"Type your message...\"\n          />\n          <button className=\"bg-blue-600 text-white px-4 rounded-r-lg hover:bg-blue-700\" onClick={handleSend}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}